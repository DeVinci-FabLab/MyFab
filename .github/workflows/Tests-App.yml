name: Test Back-end
run-name: ${{ github.actor }} push "${{ github.event.head_commit.message }}" ðŸš€
on: [push]
jobs:
  Test-Back:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          cd back/ && npm install
      - name: Create .env file
        run: |
          echo SPECIALTOKEN=$(echo $RANDOM | md5sum | head -c 20; echo;) >> back/.env
          ls -lA back/.env
      - name: Run test
        run: |
          cd back/ && export NODE_OPTIONS=--no-experimental-fetch && npm test

  Test-Front:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          cd front/ && npm install
      - name: Run build
        run: |
          cd front/ && npm run build

  Test-Build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Create .env file
        run: |
          echo PORT_FRONT=3000 >> back/.env
          echo PORT_BACK=5000 >> back/.env
          echo API=http://localhost:5000 >> back/.env
          echo BASE_PATH=/test >> back/.env
          echo DB_HOST=localhost >> back/.env
          echo DB_USER=test >> back/.env
          echo DB_ROOT_PASSWORD=$(echo $RANDOM | md5sum | head -c 20; echo;) >> back/.env
          echo DB_PASSWORD=$(echo $RANDOM | md5sum | head -c 20; echo;) >> back/.env
          echo DB_DATABASE=myFab >> back/.env
          echo SPECIALTOKEN=$(echo $RANDOM | md5sum | head -c 20; echo;) >> back/.env
          echo SHOWSWAGGER=false >> back/.env
          echo ACTIVELOGS=false >> back/.env
          echo ADSF_ENTRYPOINT=http://localhost:8080/simplesaml/saml2/idp/SSOService.php >> back/.env
          echo ADSF_ISSUER=http://app.example.com >> back/.env
          echo ADFS_FRONT_URL=http://localhost:3000/test/ >> back/.env
          ls -lA back/.env
      - name: Build back
        run: |
          docker-compose build back
      - name: Build front
        run: |
          docker-compose build front
