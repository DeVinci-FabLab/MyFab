name: "Create tag"
run-name: "Create tag : ${{ github.actor }} push '${{ github.event.head_commit.message }}' ðŸš€"
on:
  push:

jobs:
  CreateTag:
    runs-on: ubuntu-latest
    env:
      version: "1.0.0"
    outputs:
      # DÃ©finir une sortie appelÃ©e 'MY_OUTPUT'
      MY_OUTPUT: ${{ steps.define_docker_data.outputs.MY_OUTPUT }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Check if version already exist
        id: define_docker_data
        run: |
          json_content=$(cat back/package.json)
          version_back=$(echo "$json_content" | jq -r '.version')
          json_content=$(cat front/package.json)
          version_front=$(echo "$json_content" | jq -r '.version')
          if [ "$version_back" = "$version_front" ]; then
              echo "Version $version_back" >> $GITHUB_STEP_SUMMARY
              # DÃ©finir la sortie 'MY_OUTPUT'
              echo "::set-output name=MY_OUTPUT::${version_back}"
          else
              echo "The versions are different" >> $GITHUB_STEP_SUMMARY
              exit 1
          fi

      - name: Create tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "${{ needs.CreateTag.outputs.MY_OUTPUT }}"
          tag_exists_error: false
