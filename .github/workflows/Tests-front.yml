name: Test Front-end
run-name: "Front : ${{ github.actor }} push '${{ github.event.head_commit.message }}' ðŸš€"
on: [push]
jobs:
  Test-end-to-end:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Create .env file
        run: |
          echo PORT_FRONT=3000 > .env
          echo PORT_BACK=5000 >> .env
          echo API=http://localhost:5000 >> .env
          echo BASE_PATH=/dvfl >> .env
          echo IS_TEST_MODE=true >> .env
          echo VIDEO_COMPRESSION=false >> .env
          echo DB_HOST=localhost >> .env
          echo DB_USER=test >> .env
          echo DB_ROOT_PASSWORD=$(echo $RANDOM | md5sum | head -c 20; echo;) >> .env
          echo DB_PASSWORD=$(echo $RANDOM | md5sum | head -c 20; echo;) >> .env
          echo DB_DATABASE=myFab >> .env
          echo SPECIALTOKEN=$(echo $RANDOM | md5sum | head -c 20; echo;) >> .env
          echo SHOWSWAGGER=false >> .env
          echo ACTIVELOGS=false >> .env
          echo ADSF_ENTRYPOINT=http://localhost:8080/simplesaml/saml2/idp/SSOService.php >> .env
          echo ADSF_ISSUER=http://app.example.com >> .env
          echo ADFS_FRONT_URL=http://localhost:3000/test/ >> .env
          ls -lA .env
      - name: Test front
        uses: cypress-io/github-action@v5
        with:
          install-command: npm install
          build: npm run build
          start: npm run start
          wait-on: "http://localhost:3000"
          working-directory: front
          env:
            IS_TEST_MODE=true
            VIDEO_COMPRESSION=false
